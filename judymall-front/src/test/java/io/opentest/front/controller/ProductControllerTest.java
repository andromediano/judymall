/*
 * Copyright 2019. OPENTEST. All rights reserved.
 */

package io.opentest.front.controller;

import static org.mockito.BDDMockito.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import io.opentest.domain.product.entity.Product;
import io.opentest.domain.product.service.ProductService;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultActions;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;

import java.util.Optional;

@ActiveProfiles({"development"})
@WebMvcTest
public class ProductControllerTest {

    @Autowired
    private MockMvc mockMvc;

    @MockBean
    private ProductService productService;

    private static final String prefixURI = "/products";

    @Test
    @DisplayName("상품 상세 조회 테스트")
    public void detail() throws Exception {

        // ⭐️ given
        Product product = Product.builder().name("냉장고").build();
        Long id = 1L;
        String requestUri = String.format("%s/{id}", prefixURI);
        MultiValueMap<String, String> params = new LinkedMultiValueMap<>();

        given(productService.findOne(id)).willReturn(Optional.ofNullable(product));

        // ⭐️ when
        ResultActions actions = mockMvc.perform(get(requestUri, id).params(params))
                .andDo(print());

        // ⭐️ then
        actions.andExpect(status().isOk())
                .andExpect(content().contentType(MediaType.APPLICATION_JSON))
                .andExpect(jsonPath("$.name").value("냉장고"))
                .andDo(print());
    }

}
