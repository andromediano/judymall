/*
 * Copyright 2019. OPENTEST. All rights reserved.
 */

package io.opentest.domain.order.entity;

import static org.assertj.core.api.Assertions.*;

import com.querydsl.jpa.impl.JPAQueryFactory;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;

import javax.persistence.EntityManager;

@DataJpaTest(properties = {"spring.config.location=classpath:/application-domain.yml"})
@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)
public class OrderTest {

    @Autowired
    private EntityManager em;

    private JPAQueryFactory queryFactory;

    @BeforeEach
    public void init() {
        queryFactory = new JPAQueryFactory(em);
    }

    @Test
    @DisplayName("주문을 성공해야 한다")
    public void shouldSuccessOrder() {

        // ⭐️ given
        // ⭐️ when
        // ⭐️ then
        Order order = new Order();

        order.addOrderDetail(new OrderDetail("P-0001", "상품 A", 1000L, 2));
        order.addOrderDetail(new OrderDetail("P-0002", "상품 B", 2000L, 1));

        order.addOrderPayment(new CreditCardPayment(2000L, "1234-123"));
        order.addOrderPayment(new MobilePhonePayment(2000L, "010-0000-0000"));
        //order.addOrderPayment(CreditCardPayment.builder().amount(2000L).cardNumber("1234-123").build());
        //order.addOrderPayment(MobilePhonePayment.builder().amount(2000L).phoneNumber("010-0000-0000").build());

        order.setShippingAddress(new ShippingAddress("12345", "SomeBody"));

        //ShippingAddress address = new ShippingAddress();

        System.out.println("order = " + order);
    }

}
