package io.opentest.domain.user.entity;

import io.opentest.domain.user.enums.Authority;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.Setter;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import java.io.Serializable;

@NoArgsConstructor
@AllArgsConstructor(staticName = "of")
@Setter
@Getter
@Builder
@Table (
        name = "T_ROLE"/*,
        uniqueConstraints = {
                @UniqueConstraint(name = "UNIQ_IDENTITY_IN_ROLE", columnNames = { "identity" }),
                @UniqueConstraint(name = "UNIQ_AUTHORITY_IN_ROLE", columnNames = { "authority" })
        }*/)
@Entity
public class Role implements Serializable {

    //, columnDefinition = "VARCHAR(5) COMMENT '권한'"
    @Id
    @Enumerated(value = EnumType.STRING)
    @Column(nullable = false, length = 15)
    private Authority id;

    /**
     * 롤 이름.
     */
    @Column(nullable = false, length = 50)
    private String name;

    /**
     * 롤 설명.
     */
    @Column(length = 200)
    private String description;
}
