package io.opentest.domain.user.entity;

//import org.apache.commons.lang3.builder.ToStringBuilder;
//import org.apache.commons.lang3.builder.ToStringStyle;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import lombok.Getter;
import org.hibernate.annotations.GenericGenerator;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.util.Date;
import java.util.UUID;
import javax.persistence.Column;
import javax.persistence.EntityListeners;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.MappedSuperclass;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
@Getter
@MappedSuperclass
@EntityListeners(value = AuditingEntityListener.class)
public class AuditingWithoutIdentityEntity {

    @Id
    @Column(columnDefinition = "UUID")
    @GeneratedValue(generator = "uuid")
    @GenericGenerator(name = "uuid", strategy = "org.hibernate.id.UUIDGenerator")
    private UUID id;

    //, columnDefinition = "LONG COMMENT '서버내의 고유 식별 키'"
    /*
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(updatable = false, nullable = false)
    private Long seq;
    */

    //, columnDefinition = "DATETIME COMMENT '수정일시'"
    @LastModifiedDate
    @Temporal(value = TemporalType.TIMESTAMP)
    @Column(updatable = true, nullable = true)
    private Date updatedAt;

    //, columnDefinition = "DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시'"
    @CreatedDate
    @Temporal(value = TemporalType.TIMESTAMP)
    @Column(updatable = false, nullable = false)
    private Date registedAt;

    /*
    @Override
    public String toString() {
        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE).appendSuper(super.toString()).toString();
    }
    */
}
