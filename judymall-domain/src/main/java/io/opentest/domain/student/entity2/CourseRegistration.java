package io.opentest.domain.student.entity2;

import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.MapsId;
import javax.persistence.Table;

@Entity(name = "CourseRegistration2")
@Table(name = "T2_COURSE_REGISTRATION")
@Builder
@NoArgsConstructor
@AllArgsConstructor(access = AccessLevel.PROTECTED)
public class CourseRegistration {

    @EmbeddedId
    CourseRegistrationKey id;

    /**
     * &#064;MapsId는 해당 필드를 키의 일부에 연결하고 다대일 관계의 외래 키임을 의미합니다. 언급했듯이 복합 키에 엔터티를 가질 수 없기 때문에 필요합니다.
     */
    @ManyToOne
    @MapsId("studentId")
    @JoinColumn(name = "student_id")
    Student student;

    @ManyToOne
    @MapsId("courseId")
    @JoinColumn(name = "course_id")
    Course course;

    int rating;

    /**
     * 복합키는.
     * <ul>
     *     <li>@Embeddable이어야 한다.</li>
     *     <li>java.io.Serializable을 구현해야 한다.</li>
     *     <li>hashcode()와 equals()를 구현해야 한다.</li>
     *     <li>어떤 필드라도 엔티티의 속성이 될 수는 없다.</li>
     * </ul>
     */
    @Getter
    @Embeddable
    public static class CourseRegistrationKey implements Serializable {

        @Column(name = "student_id")
        Long studentId;
        @Column(name = "course_id")
        Long courseId;
    }
}
